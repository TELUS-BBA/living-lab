---
- name: deploys the management server
  hosts: management
  tasks:

    - name: ensure git is on server
      become: true
      apt:
        name: git
        state: present

    - name: ensure nginx is on server
      become: true
      apt:
        name: nginx
        state: present

    - name: ensure sqlite3 is on server
      become: true
      apt:
        name: sqlite3
        state: present

    - name: ensure python3 is on server
      become: true
      apt:
        name: python3
        state: present

    - name: ensure python3-dev is on server
      become: true
      apt:
        name: python3-dev
        state: present

    - name: ensure python3-setuptools is on server
      become: true
      apt:
        name: python3-setuptools
        state: present

    - name: ensure pip3 is on server
      become: true
      apt:
        name: python3-pip
        state: present

    - name: ensure uwsgi is on server
      become: true
      apt:
        name: uwsgi
        state: present

    - name: ensure uwsgi-plugin-python3 is on server
      become: true
      apt:
        name: uwsgi-plugin-python3
        state: present

    - name: ensure django is installed
      become: true
      pip:
        name: django
        executable: pip3

    - name: ensure djangorestframework is installed
      become: true
      pip:
        name: djangorestframework
        executable: pip3

    - name: ensure markdown is installed
      become: true
      pip:
        name: markdown
        executable: pip3

    - name: ensure django-filter is installed
      become: true
      pip:
        name: django-filter
        executable: pip3

    - name: clone living-lab-server github repo
      git:
        repo: https://github.com/adamkpickering/living-lab-server.git
        dest: /home/adam/management/
        force: true

    - name: ensure logs directory exists
      file:
        path: /home/adam/management/logs/
        state: directory

    - name: link between uwsgi.service and /etc/systemd/system/uwsgi.service
      become: true
      file:
        state: link
        src: /home/adam/management/uwsgi.service
        dest: /etc/systemd/system/uwsgi.service

    - name: enable and start uwsgi
      become: true
      systemd:
        name: uwsgi
        enabled: true
        state: restarted
        daemon_reload: yes

    - name: link between nginx-app.conf and /etc/nginx/sites-enabled/default
      become: true
      file:
        state: link
        src: /home/adam/management/nginx-app.conf
        dest: /etc/nginx/sites-enabled/default

    - name: enable and start nginx
      become: true
      systemd:
        name: nginx
        enabled: true
        state: restarted

    - name: run django's makemigrations
      django_manage:
        command: makemigrations
        app_path: /home/adam/management/app/

    - name: run django's migrate
      django_manage:
        command: migrate
        app_path: /home/adam/management/app/

    - name: run django's collectstatic
      django_manage:
        command: collectstatic
        app_path: /home/adam/management/app/

    - name: check if django superuser exists
      shell: echo "import sys; from django.contrib.auth.models import User; sys.exit(0 if User.objects.filter(username='admin').count() > 0 else 1)" | /home/adam/management/app/manage.py shell
      register: checksuperuser
      ignore_errors: true
      changed_when: false

    - name: create a django superuser
      shell: echo "from django.contrib.auth.models import User; User.objects.create_superuser('admin', 'admin@example.com', 'admin')" | /home/adam/management/app/manage.py shell
      when: checksuperuser.rc != 0
